name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push user_service Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./user_service
          file: ./user_service/Dockerfile
          push: true
          tags: |
            qaraqurt/telegram_plus:user_service-latest

      - name: Build and push gateway Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./gateway
          file: ./gateway/Dockerfile
          push: true
          tags: |
            qaraqurt/telegram_plus:gateway-latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
        run: |
          printf "%s" "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$EC2_PUBLIC_IP << EOF
            # Log in to Docker Hub
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # Pull the latest images
            docker-compose -f docker-compose.prod.yml pull

            # Recreate and start the containers with the new images
            docker-compose -f docker-compose.prod.yml up -d --remove-orphans

            # Clean up old images and unused containers
            docker system prune -f
          EOF
